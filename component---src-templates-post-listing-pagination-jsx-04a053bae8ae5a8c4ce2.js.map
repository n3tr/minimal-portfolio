{"version":3,"sources":["webpack://minimal-portfolio/./src/components/PostListing/PostListing.jsx","webpack://minimal-portfolio/./src/templates/PostListingPagination.jsx"],"names":["PostDate","styled","Title","PostItem","TableContainer","FlexContainer","postEdges","postList","forEach","postEdge","tags","node","frontmatter","tag","push","path","link","fields","slug","title","activity","type","primaryArea","additionalArea","date","excerpt","timeToRead","className","map","post","Link","to","key","format","parseISO","config","Header","onMobile","PagingContainer","currentPageNum","pageCount","prevPage","nextPage","isFirstPage","isLastPage","pageContext","data","allMarkdownRemark","edges","PageLayout","Helmet","SEO","href","Array","_val","index","pageNum"],"mappings":"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","file":"component---src-templates-post-listing-pagination-jsx-04a053bae8ae5a8c4ce2.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from 'styled-components';\nimport { parseISO, format } from \"date-fns\";\nimport config from '../../../data/SiteConfig';\n\nfunction PostListing({ postEdges }) {\n  const postList = [];\n  postEdges.forEach((postEdge) => {\n    const tags = [];\n    if (postEdge.node.frontmatter.tags) {\n      postEdge.node.frontmatter.tags.forEach((tag) => {\n        tags.push(tag);\n      });\n    }\n    // const link = postEdge.node.frontmatter.link ;\n    postList.push({\n      path: postEdge.node.frontmatter.link ? postEdge.node.frontmatter.link: postEdge.node.fields.slug,\n      title: postEdge.node.frontmatter.title,\n      activity: postEdge.node.frontmatter.activity,\n      type: postEdge.node.frontmatter.type,\n      link: postEdge.node.frontmatter.link,\n      primaryArea: postEdge.node.frontmatter.primaryArea,\n      additionalArea:  postEdge.node.frontmatter.additionalArea,\n      date: postEdge.node.fields.date?postEdge.node.fields.date: \"2021-01-01\",\n      excerpt: postEdge.node.excerpt,\n      timeToRead: postEdge.node.timeToRead,\n    });\n  });\n\n\n  return (\n    <TableContainer>\n      <div className=\"table\">\n       <FlexContainer>\n          <div className=\"column\">\n            <Title>Date</Title> \n          </div>\n          <div className=\"column\">\n            <Title>Title</Title>\n          </div>\n          <div className=\"column\">\n            <Title>Activity</Title>\n          </div>\n          <div className=\"column\">\n            <Title>Type</Title>\n          </div>\n          <div className=\"column\">\n            <Title>Primary Contribution Area</Title>\n          </div>\n          <div className=\"column\">\n            <Title>Additional Contribution Area</Title>\n          </div>\n        </FlexContainer>\n      {\n        /* Your post list here. */\n        postList.map((post) => (\n          <PostItem>\n            <Link to={post.path} key={post.title} >\n              <FlexContainer>\n                <div className=\"column\">\n                  <PostDate >\n                    {format(parseISO(post.date), config.dateFormat)}\n                  </PostDate>\n                </div>\n                <div className=\"column\">\n                  {post.title} \n                </div>\n                \n                <div className=\"column\">\n                  {post.activity} \n                </div>\n                <div className=\"column\">\n                  {post.type} \n                </div>\n                <div className=\"column\">\n                  {post.primaryArea} \n                </div>\n                <div className=\"column\">\n                  {post.additionalArea} \n                </div>\n              </FlexContainer>\n            </Link>\n          </PostItem>\n        ))\n      }\n      </div>\n    </TableContainer>\n  );\n}\n\nconst PostDate = styled.time`\n  color: var(--colors-text-3);\n  font-weight: 400;\n  font-size: 0.8rem;\n`;\n\nconst Title = styled.h4`\n  font-size: 0.9rem;\n  padding: 20px 5px 0px 5px;\n`;\n\n\nconst PostItem = styled.div`\n\n  a, a:visited{\n    display: inline-block;\n    color: var(--text-heading);\n    font-weight: 400;\n    font-size: 0.9rem;\n    line-height: 1.5;\n    text-decoration: none;\n    width:100%;\n    padding: 20px 5px 20px 5px;\n    border-radius: 10px;\n  }\n\n  a:hover{\n    background: var(--colors-hover-0);\n  }\n\nh4{\n  margin:0;\n  padding:0;\n}\n`;\n\nconst TableContainer = styled.div`\n  .table .column{\n    // 6 Columns table\n    width: 16.6% \n  }\n`;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\n\nexport default PostListing;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql, Link as GatsbyLink } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PageLayout from \"../layout/PageLayout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\n\nimport styled from \"styled-components\"\nimport Hero from \"../components/Hero\";\nimport { onMobile } from \"../themes/responsive\";\n\n\nfunction PostListingPagination({ pageContext, data }) {\n  function renderPaging() {\n    const { currentPageNum, pageCount } = pageContext;\n    const prevPage = currentPageNum - 1 === 1 ? \"/\" : `/${currentPageNum - 1}/`;\n    const nextPage = `/${currentPageNum + 1}/`;\n    const isFirstPage = currentPageNum === 1;\n    const isLastPage = currentPageNum === pageCount;\n\n    return (\n      <PagingContainer>\n        {!isFirstPage && <Link href={prevPage}>Previous</Link>}\n        {[...Array(pageCount)].map((_val, index) => {\n          const pageNum = index + 1;\n          return (\n            <Link\n              key={`listing-page-${pageNum}`}\n              href={pageNum === 1 ? \"/\" : `/${pageNum}/`}\n            >\n              {pageNum}\n            </Link>\n          );\n        })}\n        {!isLastPage && <Link href={nextPage}>Next</Link>}\n      </PagingContainer>\n    \n    );\n  }\n\n  const postEdges = data.allMarkdownRemark.edges;\n\n  return (\n    <PageLayout>\n      <Header>Recent Activites</Header>\n      <div className=\"listing-container\">\n        <div className=\"posts-container\">\n          <Helmet title={config.siteTitle} />\n          <SEO />\n          <PostListing postEdges={postEdges} />\n        </div>\n        {renderPaging()}\n      </div>\n    </PageLayout>\n  );\n}\n\n\n// It should use GatsbyLink due to better performance\nconst Link = styled.a`\n  font-weight: bold;\n  padding: 10px 20px;\n  border-radius: 10px;\n  :hover{\n    cursor: pointer;\n    background: var(--colors-hover-0);\n  }\n  i{\n    color: var(--color-default);\n    font-size: 1.2em;\n  }\n`;\n\nconst Header = styled.h2`\n  ${onMobile} {\n    margin-top: 80px;\n    font-size: 1.2rem;\n  }\n`\n\nconst PagingContainer = styled.div`\n  margin-top: 30px;\n`;\n\nexport default PostListingPagination;\n\n/* eslint no-undef: \"off\" */\nexport const listingQuery = graphql`\n  query ListingQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [fields___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date\n            activity\n            type\n            link\n            primaryArea\n            additionalArea\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}